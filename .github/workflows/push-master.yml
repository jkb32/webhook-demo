name: Nx Affected CI

on:
  push:
    branches: [master, ci-test]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - run: git fetch --no-tags --prune --depth=5 origin master
  format:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Load node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run format:check -- --base=$(git rev-parse HEAD~1)
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Load node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run affected:lint -- --base=$(git rev-parse HEAD~1)
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Load node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run affected:test -- --base=$(git rev-parse HEAD~1)
  e2e:
    runs-on: ubuntu-latest
    needs: [format, lint, test]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Load node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run affected:e2e -- --base=$(git rev-parse HEAD~1)
  build-images:
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Load node modules
        uses: actions/cache@v2
        env:
          cache-name: node-dependencies
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build gateway-api -- --prod
      - run: npm run build subscription-manager -- --prod
      - run: npm run build webhook-sender -- --prod
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: webhook-demo-dist
          path: |
            dist
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Gateway API
        id: docker_build_gateway_api
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/gateway-api/Dockerfile
          push: true
          tags: panbubr/webhook-demo-gateway-api:latest
      - name: Build and push Subscription Manager
        id: docker_build_subscription_manager
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/subscription-manager/Dockerfile
          push: true
          tags: panbubr/webhook-demo-subscription-manager:latest
      - name: Build and push Webhook Sender
        id: docker_build_webhook_sender
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/webhook-sender/Dockerfile
          push: true
          tags: panbubr/webhook-demo-webhook-sender:latest
      - run: echo ${{ steps.docker_build_gateway_api.outputs.digest }}
      - run: echo ${{ steps.docker_build_subscription_manager.outputs.digest }}
      - run: echo ${{ steps.docker_build_webhook_sender.outputs.digest }}
